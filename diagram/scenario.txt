Ведение справочников
====================
Производится через стандартный интерфейс администратора Django.
Добавление, редактирование и удаление элементов справочников курсов, тренеров и залов.

Регистрация менеджера
=====================
Производится через стандартный интерфейс администратора Django.
Добавление, редактирование и удаление менеджеров.

AJAX
====
Приложение отправляет HTTP запрос (POST запрос) на сервер.
Сервер обрабатывает полученную информацию.
Сервер отправляет отклик приложению в формате JSON.
::Сценарий завершён

Привязка пользователя к карте
=======================================
Приложение показывает сообщение "Приложите новую карту к считывателю".
Менеджер прикладывает карту к считывателю.
Приложение выполняет привязку карты к пользователю.
  [[AJAX]] in(текущий пользователь, идентификатор карты), out(success, failure)
    [[WEBAPP]] проверка карты, она не должна быть привязана к пользователю
      [[DB]] Таблица user_card, поиск по идентификатору текущей карты и состоянию
      [[DB]] Если карта свободна, создать запись в user_card
             о привязке текущей карты к текущему пользователю.
::Сценарий завершён

Регистрация клиента
===================
Клиент обращается к менеджеру с просьбой на заведение клубной карты.
Клиент предоставляет паспорт.
Менеджер открывает диалог регистрации клиента.
  Диалог содержит поля: ФИО, дата рождения, пол
Менеджер заполняет диалог
  [[AJAX]] сохранение данных клиента
  [[Привязка пользователя к карте]]
Менеджер закрывает диалог регистрации клиента и передаёт карту клиенту.
::Сценарий завершён

Авторизация по карте
====================
Менеджер переводит систему в режим ожидания карты.
Приложение показывает сообщение "Приложите карту к считывателю".
Карта прикладывается к считывателю.
  Приложение получает идентификатор карты.
  Приложение получает информацию о пользователе по идентификатору карты.
    [[AJAX]] in(идентификатор карты), out(ФИО, список курсов).
::Сценарий завершён

Диалог: Информация о клиенте
============================
Поля диалога:
* фамилия
* имя
* год рождения
* пол
* список курсов (всех, которые были ему назначены)

Список курсов представлен полями:
* название курса
* базовый тренер
* оплаченное количество занятий
* остаток занятий
* дата назначения курса
* дата окончания курса

Неактивные курсы отображаются серым цветом шрифта, активные - чёрным.

Также на диалоге отображается список возможных курсов, поля:
* название курса
* базовый тренер
* количество занятий
* цена

::Сценарий завершён

Диалог: Информация о событии
============================
Поля диалога:
* тип события: тренировка или аренда
* название
* тренер (только в случае тренировки: базовый или замена)
* тип аренды (только в случае аренды: бронь или оплачено)
* дата
* время
* длительность

Кнопки диалога:
* Удалить (при нажатии должен возникать модальный диалог с текстом "Вы уверены?")
* Замена, только для тренировки (при нажатии должен возникать модальный диалог со списком замены) [[Диалог: Замена тренера]]
* Проведено
* Отменено

::Сценарий завершён

Диалог: Замена тренера
======================
Поля диалога:
* радио кнопки:
  * внешняя замена
  * внутренняя замена
    * список тренеров
Диалог должен позволять выбор нескольких тренеров.
::Сценарий завершён

Назначение курса
================
Клиент обращается к менеджеру с просьбой на добавление курса на его клубную карту.
[[Авторизация по карте]] Клиент аутентифицируется по карте.
Менеджер открывает диалог управления информацией клиента.
  [[Диалог: Информация о клиенте]]
Менеджер назначает курс клиенту(курс=выбранный курс, дата начала=выбранная дата(по умолчанию текущая дата), клиент=текущий клиент)
  [[AJAX]] in(клиент, дата начала, курс), out(success, failure)
::Сценарий завершён

Отмена курса по инициативе клиента
==================================
Клиент обращается к менеджеру с просьбой на отмену курса с его клубной карты.
[[Авторизация по карте]] Клиент аутентифицируется по карте.
Менеджер открывает диалог управления информацией клиента.
  [[Диалог: Информация о клиенте]]
Менеджер убирает курс (клиент=текущий клиент, курс=выбранный курс).
  [[AJAX]] in(клиент, курс), out(success, failure)
::Сценарий завершён

Отмена курса по ининциативе организации
=======================================
Администратор отменяет курс (выбранный курс).
  Курс получает статус - отменён.
  Курс на карточке клиента получает статус - отменён.

[[PAINT]: Отображение события в расписании
================================
Приложение отображает событие на расписании
  model.insert(дата, время, зал, (длительность, тип аренды))
  OR
  model.insert(дата, время, зал, курс)

Добавление тренировки в расписание
==================================
Менеджер выбирает курс на дереве курсов.
Менеджер переносит мышкой выбранный курс в нужное место на расписании.
  [[AJAX]] in(дата, время, курс), out(список залов)
Появляется диалог, на котором отображаются кнопки с залами, которые могут принять выбранный курс.
Менеджер выбирает зал.
  [[AJAX]] in(дата, время, зал, курс), out(success, failed)
  [[PAINT]] in(дата, время, зал, курс)
::Сценарий завершён

Добавление аренды в расписание
==============================
Менеджер вызывает диалог добавления аренды в расписание.
  Диалог содержит поля:
    * дата - в пределах недели, отображаемой на расписании;
    * время начала - в пределах рабочего времени, квант полчаса=системный
    * длительность - квант полчаса=системный
    * тип аренды - бронь/оплачено
Менеджер заполняет диалог.
  [[AJAX]] in(дата, время, длительность), out(список залов)
Менеджер выбирает зал.
  [[AJAX]] in(дата, время, длительность, зал, тип аренды), out(success, failed)
  [[PAINT]] in(дата, время, зал, (длительность, тип аренды))
::Сценарий завершён

Перемещение события (тренировка/аренда)по расписанию
====================================================
Менеджер выбирает событие.
Менеджер перемещает мышкой выбранное событие на нужное место в расписании.
  [[AJAX]] in (дата, время, событие), out(список залов)
Появляется диалог, на котором отображаются кнопки с залами, которые могут принять выбранный курс.
Менеджер выбирает зал.
  [[AJAX]] in(дата, время, зал, событие), out(success, failed)
  [[PAINT]] in(дата, время, зал, событие)
::Сценарий завершён

Удаление события (тренировка/аренда) из расписания
==================================================
Менеджер выбирает событие.
Возникает диалог с информацией о событии.
  [[Диалог: Информация о событии]]
Менеджер удаляет событие, нажимая кнопку "Удалить" на диалоге.
  [[AJAX]] in(дата, время, зал, курс), out(success, failed)
  [[PAINT]] in(дата, время, зал, курс)
::Сценарий завершён

Замена базового тренера
=======================
Менеджер выбирает событие.
Возникает диалог с информацией о событии.
Менеджер выбирает тренера из списка.
  [[AJAX]] in(дата, время, зал, курс, тренер), out(success, failed)
  [[PAINT]] in(дата, время, зал, курс)
::Сценарий завершён

Событие проведено/отменено
==========================
Менеджер выбирает событие.
Возникает диалог с информацией о событии.
Менеджер выбирает в radio поле статус события.
  [[AJAX]] in(дата, время, зал, курс, статус), out(success, failed)
    [[DB EVENT UPDATE]]
  [[PAINT]] in(дата, время, зал, курс)
::Сценарий завершён

Выбор клиентом тренировки
=========================
Клиент работает с пользовательским терминалом.
Терминал находится в режиме ожидания карты.
Клиент прикладывает карту к считывателю терминала.
 [[AJAX]] in(идентификатор карты), out(ФИО, список курсов).
Приложение отображает тренировки в виде таблицы:
	   по горизонтали - залы, по вертикали - время
Клиент выбирает тренировку.
  [[AJAX]] in(текущий клиент, выбранная тренировка), out(success/failure)
Печать чека
Выводится сообщение "Благодарим за использование системы."
::Сценарий завершён

Пользователь выбрал более дорогую тренировку
============================================
Клиент работает с пользовательским терминалом.
Терминал находится в режиме ожидания карты.
Клиент прикладывает карту к считывателю терминала.
 [[AJAX]] in(идентификатор карты), out(ФИО, список курсов).
Приложение отображает тренировки в виде таблицы:
	   по горизонтали - залы, по вертикали - время
Клиент выбирает более дорогую тренировку.
  [[AJAX]] in(текущий клиент, выбранное событие), out(success/failure)
    [[DB]] регистрация выбора
Выводится сообщение "Пожалуйста, обратитесь к менеджеру.
                     Благодарим за использование системы."
::Сценарий завершён

Пользователь подтвердил более дорогую тренировку
================================================
Клиент обращается к менеджеру с просьбой дать пропуск на более дорогую тренировку.
[[Авторизация по карте]] Клиент аутентифицируется по карте.
Менеджер открывает диалог управления информацией клиента.
На диалоге отображается информация о клиенте (ФИО, дата рождения, пол + список активных курсов + последняя выбранная более дорогая тренировка).
Менеджер одобряет выбранную более дорогую тренировку
  [[AJAX]] in(текущий клиент, событие), out(success/failure)
::Сценарий завершён

Пользователь отказался участвовать в тренировке
===============================================
Клиент обращается к менеджеру с просьбой отменить текущую тренировку.
[[Авторизация по карте]] Клиент аутентифицируется по карте.
Менеджер открывает диалог управления информацией клиента.
На диалоге отображается информация о клиенте (ФИО, дата рождения, пол + список активных курсов + последняя назначенная тренировка).
Менеджер отменяет выбранную  тренировку
  [[AJAX]] in(текущий клиент, событие), out(success/failure)
::Сценарий завершён
